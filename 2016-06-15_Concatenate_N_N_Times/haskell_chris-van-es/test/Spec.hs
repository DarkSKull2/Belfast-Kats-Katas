import Test.Hspec
import Lib

main :: IO ()
main = hspec $ do
  describe "Concatenate N N times" $ do
    
    it "should match 7 x 7s" $ do
      (repeatedPatternValid "7777777") `shouldBe` True

    it "should not match 8 x 7s" $ do
      (repeatedPatternValid "77777777") `shouldBe` False

    it "should match 12 x 12s" $ do
      (repeatedPatternValid "121212121212121212121212") `shouldBe` True

    it "should not match 11 x 12s" $ do
      (repeatedPatternValid "1212121212121212121212") `shouldBe` False

    it "should match 100 x 100s" $ do
      let patternToTest = "100100100100100100100100100100100100100100100\
        \100100100100100100100100100100100100100100100100100100100100100\
        \100100100100100100100100100100100100100100100100100100100100100\
        \100100100100100100100100100100100100100100100100100100100100100\
        \100100100100100100100100100100100100100100100100100100100100100100"
      (repeatedPatternValid patternToTest) `shouldBe` True

    it "should not match 99 x 100s" $ do
      let patternToTest = "100100100100100100100100100100100100100100100\
        \100100100100100100100100100100100100100100100100100100100100100\
        \100100100100100100100100100100100100100100100100100100100100100\
        \100100100100100100100100100100100100100100100100100100100100100\
        \100100100100100100100100100100100100100100100100100100100100100"
      (repeatedPatternValid patternToTest) `shouldBe` False
